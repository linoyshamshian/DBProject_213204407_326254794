------------------ Function 1 ------------------
CREATE OR REPLACE FUNCTION calculate_avg_experience_and_update_service(p_airlineid numeric)
RETURNS numeric AS $$
DECLARE
    avg_exp numeric(5,2);
    rec RECORD;
BEGIN
    -- חישוב ממוצע שנות ניסיון של טייסים בחברת התעופה הנתונה
    SELECT AVG(experienceyears) INTO avg_exp
    FROM pilot
    WHERE airlineid = p_airlineid;

    IF avg_exp IS NULL THEN
        RAISE EXCEPTION 'No pilots found for airlineid: %', p_airlineid;
    END IF;

    -- עדכון פידבק בשירותים הקשורים לטייסים מהחברה הנתונה בלבד
    FOR rec IN 
        SELECT DISTINCT s.numservice
        FROM service s
        JOIN give g ON s.numservice = g.numservice
        JOIN pilot p ON g.personid = p.personid
        WHERE s.status = 'Pending' AND p.airlineid = p_airlineid
    LOOP
        IF avg_exp > 5 THEN
            UPDATE service 
            SET feadback = 'Experienced pilots available' 
            WHERE numservice = rec.numservice;
        ELSE
            UPDATE service 
            SET feadback = 'Pilot experience low' 
            WHERE numservice = rec.numservice;
        END IF;
    END LOOP;

    RETURN avg_exp;

EXCEPTION
    WHEN OTHERS THEN
        RAISE NOTICE 'Error calculating average experience: %', SQLERRM;
        RETURN NULL;
END;
$$ LANGUAGE plpgsql;



------------------ Function 2 ------------------

CREATE OR REPLACE FUNCTION get_pilots_for_flight(p_flightid integer, p_cursor_name refcursor)
RETURNS refcursor AS $$
BEGIN
    OPEN p_cursor_name FOR
        SELECT p.personid, p.fullname, pl.experienceyears, pl.airlineid
        FROM pilot pl
        JOIN person p ON pl.personid = p.personid
        JOIN personinflight pf ON pf.personid = pl.personid
        WHERE pf.flightid = p_flightid;

    RETURN p_cursor_name;
END;
$$ LANGUAGE plpgsql;

